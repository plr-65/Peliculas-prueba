@page "/"

<div>

    @*<h3> Películas</h3>
    @foreach (var pel in ObtenerPeliculas())
    {
        <div>
            <p> Titulo: <b>@pel.Titulo</b></p>
            <p> Fecha Lanzamiento: <b>@pel.Lanzamiento.ToString("dd" + "-" + "MM" + "-" + "yyyy")</b></p>
        </div>
    }*@

    if(Peliculas==null)
    {
            @*<img src="https"*@
        <text>"Cargando...."</text>

    }

    @for (var i = 0; i < Peliculas.Count; i++)
    {
        <div>

            <p> Titulo: <b>@Peliculas[i].Titulo</b></p>
            <p> Fecha Lanzamiento: <b>@Peliculas[i].Lanzamiento.ToString("dd" + "-" + "MM" + "-" + "yyyy")</b></p>

            @if (i == Peliculas.Count - 1)
            {
                <p> Esta es la última película</p>
            }
        </div>
    }


</div>

@code
{       protected override async Task OnInitializedAsync()
        {
            await Task.Delay(3000);
            Peliculas = ObtenerPeliculas();
        }

        private List<Pelicula> ObtenerPeliculas()
        {
            return new List<Pelicula>()
            {
                new Pelicula() { Titulo = "Spiderman", Lanzamiento = new DateTime(2021, 2, 27) },
                new Pelicula() { Titulo = "Cat Woman", Lanzamiento = new DateTime(2020, 10, 31) },
                new Pelicula() { Titulo = "Superman", Lanzamiento = new DateTime(2021, 9, 30) }
            };
        }

        @*public List<Pelicula>Peliculas { get { return ObtenerPeliculas(); } }*@
        public List<Pelicula> Peliculas;
}
